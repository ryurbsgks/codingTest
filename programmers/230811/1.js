// [1차] 셔틀버스

// 카카오에서는 무료 셔틀버스를 운행하기 때문에 판교역에서 편하게 사무실로 올 수 있다. 카카오의 직원은 서로를 '크루'라고 부르는데, 아침마다 많은 크루들이 이 셔틀을 이용하여 출근한다.
// 이 문제에서는 편의를 위해 셔틀은 다음과 같은 규칙으로 운행한다고 가정하자.
// 셔틀은 09:00부터 총 n회 t분 간격으로 역에 도착하며, 하나의 셔틀에는 최대 m명의 승객이 탈 수 있다.
// 셔틀은 도착했을 때 도착한 순간에 대기열에 선 크루까지 포함해서 대기 순서대로 태우고 바로 출발한다. 예를 들어 09:00에 도착한 셔틀은 자리가 있다면 09:00에 줄을 선 크루도 탈 수 있다.
// 일찍 나와서 셔틀을 기다리는 것이 귀찮았던 콘은, 일주일간의 집요한 관찰 끝에 어떤 크루가 몇 시에 셔틀 대기열에 도착하는지 알아냈다. 콘이 셔틀을 타고 사무실로 갈 수 있는 도착 시각 중 제일 늦은 시각을 구하여라.
// 단, 콘은 게으르기 때문에 같은 시각에 도착한 크루 중 대기열에서 제일 뒤에 선다. 또한, 모든 크루는 잠을 자야 하므로 23:59에 집에 돌아간다. 따라서 어떤 크루도 다음날 셔틀을 타는 일은 없다.

function solution(n, t, m, timetable) {
  var answer = '';

  let time = 9 * 60;
  let arr = timetable.map( (el) => {

    let [h, m] = el.split(":");

    return (h * 60) + Number(m);
  }).sort( (a, b) => a- b);

  for (let i = 1; i <= n; i++) {

    let customer = arr.filter( (el) => el <= time).length;

    if (i === n) {
      if (customer >= m) {
        time = arr[m - 1] - 1;
      }
    } else {
      arr.splice(0, customer > m ? m : customer);
      time = time + t;
    }

  }

  answer = `${String(Math.floor(time / 60)).padStart(2, "0")}:${String(Math.floor(time % 60)).padStart(2, "0")}`;

  return answer;
}

console.log(solution(1, 1, 5, ["08:00", "08:01", "08:02", "08:03"])) // "09:00"
console.log(solution(2, 10, 2, ["09:10", "09:09", "08:00"])) // "09:09"
console.log(solution(2, 1, 2, ["09:00", "09:00", "09:00", "09:00"])) // "08:59"
console.log(solution(1, 1, 5, ["00:01", "00:01", "00:01", "00:01", "00:01"])) // "00:00"
console.log(solution(1, 1, 1, ["23:59"])) // "09:00"
console.log(solution(10, 60, 45, ["23:59","23:59", "23:59", "23:59", "23:59", "23:59", "23:59", "23:59", "23:59", "23:59", "23:59", "23:59", "23:59", "23:59", "23:59", "23:59"])) // "18:00"